/**
OSKRHQ.DS Demo Theme
Hi! üëãüèº  
Below, you will find a theme I created to demonstrate the capabilities of the theming system.
*/


/**
Color Palette
Change these color values below to your brand colors.
*/
// Brand - Primary 
$ds-theme-color-primary-700: null;
$ds-theme-color-primary-600: null;
$ds-theme-color-primary-500: null;
$ds-theme-color-primary-400: #395717; //#333333;
$ds-theme-color-primary-300: null;
$ds-theme-color-primary-200: null;
$ds-theme-color-primary-100: null;

// Brand - Secondary 
$ds-theme-color-secondary-700: null;
$ds-theme-color-secondary-600: null;
$ds-theme-color-secondary-500: null;
$ds-theme-color-secondary-400: #B09E67; //#EC407A;
$ds-theme-color-secondary-300: null;
$ds-theme-color-secondary-200: null;
$ds-theme-color-secondary-100: null;

// Brand - Tertiary 
$ds-theme-color-tertiary-700: null;
$ds-theme-color-tertiary-600: null;
$ds-theme-color-tertiary-500: null;
$ds-theme-color-tertiary-400: #7BAC45;
$ds-theme-color-tertiary-300: null;
$ds-theme-color-tertiary-200: null;
$ds-theme-color-tertiary-100: null;

//Neutral - Used for text, borders, shadows, background, etc
$ds-theme-color-neutral-700: null;
$ds-theme-color-neutral-600: null;
$ds-theme-color-neutral-500: null;
$ds-theme-color-neutral-400: #C0C3C7;
$ds-theme-color-neutral-300: null;
$ds-theme-color-neutral-200: null;
$ds-theme-color-neutral-100: null;

// Success - Used to communicate status or feedback to the user 
$ds-theme-color-success-700: null;
$ds-theme-color-success-600: null;
$ds-theme-color-success-500: null;
$ds-theme-color-success-400: #35C873;
$ds-theme-color-success-300: null;
$ds-theme-color-success-200: null;
$ds-theme-color-success-100: null;
// Danger - Used to communicate status or feedback to the user
$ds-theme-color-danger-700: null;
$ds-theme-color-danger-600: null;
$ds-theme-color-danger-500: null;
$ds-theme-color-danger-400: #FF5656;
$ds-theme-color-danger-300: null;
$ds-theme-color-danger-200: null;
$ds-theme-color-danger-100: null;
// Warning - Used to communicate status or feedback to the user
$ds-theme-color-warning-700: null;
$ds-theme-color-warning-600: null;
$ds-theme-color-warning-500: null;
$ds-theme-color-warning-400: #FEC541;
$ds-theme-color-warning-300: null;
$ds-theme-color-warning-200: null;
$ds-theme-color-warning-100: null;
// Info - Used to communicate status or feedback to the user
$ds-theme-color-info-700: null;
$ds-theme-color-info-600: null;
$ds-theme-color-info-500: null;
$ds-theme-color-info-400: #4285F4;
$ds-theme-color-info-300: null;
$ds-theme-color-info-200: null;
$ds-theme-color-info-100: null;


// **TYPOGRAPHY**
// Typeface
// Change the typeface.
//@import url('https://fonts.googleapis.com/css?family=IBM+Plex+Mono:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i');
$ds-theme-font-family: 'Poppins',
    sans-serif; //'IBM Plex Mono', monospace;
$ds-theme-base-font-size: 16px;


// **SPACING**
// Point-Grid System
// Use multiples of this value to define dimensions, padding, and margin of both block and inline elements.
$ds-theme-base-point-grid: 8px;
// Learn more here: https://builttoadapt.io/intro-to-the-8-point-grid-system-d2573cde8632


// **BORDER RADIUS**
// How round would you like your containers to be?
$ds-theme-base-border-radius: 16px;


/// ds-color


$ds-color-palette-data: (
    neutral: (700: $ds-theme-color-neutral-700,
        600: $ds-theme-color-neutral-600,
        500: $ds-theme-color-neutral-500,
        400: $ds-theme-color-neutral-400,
        300: $ds-theme-color-neutral-300,
        200: $ds-theme-color-neutral-200,
        000: $ds-theme-color-neutral-100 ),

    primary: (700: $ds-theme-color-primary-700,
        600: $ds-theme-color-primary-600,
        500: $ds-theme-color-primary-500,
        400: $ds-theme-color-primary-400,
        300: $ds-theme-color-primary-300,
        200: $ds-theme-color-primary-200,
        100: $ds-theme-color-primary-100 ),

    secondary: (700: $ds-theme-color-secondary-700,
        600: $ds-theme-color-secondary-600,
        500: $ds-theme-color-secondary-500,
        400: $ds-theme-color-secondary-400,
        300: $ds-theme-color-secondary-300,
        200: $ds-theme-color-secondary-200,
        100: $ds-theme-color-secondary-100 ),

    tertiary: (700: $ds-theme-color-tertiary-700,
        600: $ds-theme-color-tertiary-600,
        500: $ds-theme-color-tertiary-500,
        400: $ds-theme-color-tertiary-400,
        300: $ds-theme-color-tertiary-300,
        200: $ds-theme-color-tertiary-200,
        100: $ds-theme-color-tertiary-100 ),

    info: (700: $ds-theme-color-info-700,
        600: $ds-theme-color-info-600,
        500: $ds-theme-color-info-500,
        400: $ds-theme-color-info-400,
        300: $ds-theme-color-info-300,
        200: $ds-theme-color-info-200,
        100: $ds-theme-color-info-100 ),

    warning: (700: $ds-theme-color-warning-700,
        600: $ds-theme-color-warning-600,
        500: $ds-theme-color-warning-500,
        400: $ds-theme-color-warning-400,
        300: $ds-theme-color-warning-300,
        200: $ds-theme-color-warning-200,
        100: $ds-theme-color-warning-100 ),

    danger: (700: $ds-theme-color-danger-700,
        600: $ds-theme-color-danger-600,
        500: $ds-theme-color-danger-500,
        400: $ds-theme-color-danger-400,
        300: $ds-theme-color-danger-300,
        200: $ds-theme-color-danger-200,
        100: $ds-theme-color-danger-100 ),

    success: (700: $ds-theme-color-success-700,
        600: $ds-theme-color-success-600,
        500: $ds-theme-color-success-500,
        400: $ds-theme-color-success-400,
        300: $ds-theme-color-success-300,
        200: $ds-theme-color-success-200,
        100: $ds-theme-color-success-100 )) !default;


// ds-color-function


/// Returns the color value for a given color name and group.
///
/// @param {String} $hue - The color's hue.
/// @param {Number} $range - The darkness/lightness of the color. Defaults to base. The higher the number, the darker the color.
/// @return {Color} The color value.

@function ds-color($hue, $range: 400) {
    $fetched-color: map-get(map-get($ds-color-palette-data, $hue), $range);

    @if map-has-key($ds-color-palette-data, $fetched-color) {
        $fetched-color: map-get(map-get($ds-color-palette-data, $fetched-color), $range);
    }

    @if type-of($fetched-color)==color {
        @return $fetched-color;
    }

    @else if $fetched-color ==null {
        $fetched-based-color: map-get(map-get($ds-color-palette-data, $hue), 400);

        @if $range <=100 {
            $fetched-color: lighten($fetched-based-color, 30%);
            @return $fetched-color;
        }

        @else if $range ==200 {
            $fetched-color: lighten($fetched-based-color, 20%);
            @return $fetched-color;
        }

        @else if $range ==300 {
            $fetched-color: lighten($fetched-based-color, 10%);
            @return $fetched-color;
        }

        @else if $range ==500 {
            $fetched-color: darken($fetched-based-color, 10%);
            @return $fetched-color;
        }

        @else if $range ==600 {
            $fetched-color: darken($fetched-based-color, 20%);
            @return $fetched-color;
        }

        @else if $range ==700 {
            $fetched-color: darken($fetched-based-color, 30%);
            @return $fetched-color;
        }

        @else {
            @error 'The `#{$range}` could not be found. Make sure you have specify a range between 000 and 700.';
        }
    }

    @else {
        @error 'Color `#{$hue} - #{$range}` not found. Available colors: #{$ds-color-palette-data}';
    }
}


/// Returns a foreground color based on a given background-color in accordance with accessibility standards.
///
/// @param {Color} $background-color - The background color where the foreground will sit.
/// @param {Color} $dark-color - The dark color you wish to display if there is enough contrast.
/// @param {Color} $light-color - The light color you wish to display if there is enough contrast.
/// @return {Color} The HEX color of the foreground.
@function ds-color-contrast($background-color, $dark-color: ds-color(neutral, 700), $light-color: ds-color(neutral, 000)) {
    @if $background-color ==null {
        @return null;
    }

    @else {
        // Based on the algorithm recommended by W3: https://www.w3.org/TR/AERT/#color-contrast
        $yiq: (red($background-color) * 299 + green($background-color) * 587 + blue($background-color) * 114) / 1000;
        @return if($yiq >=128, $dark-color, $light-color);
    }
}

// body {
//     font-family: $font-family;
//     background-color: $secondary;
//     color: #ffffff;
// }

// body {
//     --bg: white;
//     --textNormal: #222;
//     --textTitle: #222;
//     --textLink: blue;
//     --hr: hsla(0, 0%, 0%, 0.2);

//     background-color: var(--bg);
//     font-family: $font-family;
// }

// body.dark {
//     -webkit-font-smoothing: antialiased;

//     --bg: darkslategray;
//     --textNormal: rgba(255, 255, 255, 0.88);
//     --textTitle: white;
//     --textLink: yellow;
//     --hr: hsla(0, 0%, 100%, 0.2);
// }

